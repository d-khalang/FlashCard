{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 20
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1088,
        144
      ],
      "id": "310f5257-0ccf-43e2-bb66-f29afaa9d5f9",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d8cc130f-c5b5-451a-bc8d-56b577d23861",
              "name": "=iso15",
              "value": "={{ new Date(Date.now() - 15*60*1000).toISOString() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -864,
        144
      ],
      "id": "1c349e3d-4b28-4af2-8dad-3a5af1068ab6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "collection": "users",
        "options": {},
        "query": "={\n  \"has_pending\": false,\n  \"$and\": [\n    {\n      \"$or\": [\n        { \"last_push_at\": { \"$lt\": \"{{new Date($json.iso15).toISOString()}}\" } },\n        { \"last_push_at\": null },\n        { \"last_push_at\": { \"$exists\": false } }\n      ]\n    }\n  ]\n}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        -640,
        144
      ],
      "id": "9a466962-d99e-4683-97cd-d31a1b7d7ad0",
      "name": "Find users - no pending, push more than 20 min ago",
      "credentials": {
        "mongoDb": {
          "id": "AHx6Vu0j6A0sxyHq",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "collection": "expression",
        "options": {},
        "query": "={\n  \"user_id\": \"{{ $json.user_id }}\",\n  \"status\": \"active\",\n  \"$and\": [\n    {\n      \"$or\": [\n        { \"last_sent_at\": null },\n        { \"last_sent_at\": { \"$lt\": \"{{new Date(Date.now() - 1200*60*1000).toISOString()}}\" } }\n      ]\n    }\n  ]\n}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        -416,
        144
      ],
      "id": "cc8f0372-bc89-44d7-a09c-bedfa92254ae",
      "name": "Find documents",
      "credentials": {
        "mongoDb": {
          "id": "AHx6Vu0j6A0sxyHq",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nimport datetime\nimport random\n\nUTC = datetime.timezone.utc\n\ndef parse_iso(ts: str):\n    if not ts:\n        return None\n    try:\n        # handle \"...Z\"\n        if ts.endswith(\"Z\"):\n            ts = ts[:-1] + \"+00:00\"\n        dt = datetime.datetime.fromisoformat(ts)\n        # force timezone-aware\n        if dt.tzinfo is None:\n            dt = dt.replace(tzinfo=UTC)\n        return dt\n    except Exception:\n        return None\n\ndef hours_since(dt):\n    if not dt:\n        return 0.0\n    now = datetime.datetime.now(UTC)\n    return max((now - dt).total_seconds() / 3600.0, 0.0)\n\ndef priority(c):\n  # 1) t = hours since last review (last_interaction_at or created_at)\n    last_dt = parse_iso(c.get(\"last_interaction_at\")) or parse_iso(c.get(\"created_at\"))\n    t = hours_since(last_dt)\n    recency = t / (1.0 + t)\n\n    # 2) D = difficulty (from EWMA grade 0..5)\n    ewma = float(c.get(\"ewma_grade\") or 0)\n    D = 1.0 - (ewma / 5.0)\n\n    # 3) S = stability (from success_streak)\n    streak = float(c.get(\"success_streak\") or 0)\n    S = 1.0 / (1.0 + streak)\n\n    # 4) L = lapses (capped at 5)\n    lapses = float(c.get(\"lapses\") or 0)\n    L = min(lapses, 5.0) / 5.0\n\n    # 5) N = novelty (reps==0)\n    reps = int(c.get(\"reps\") or 0)\n    N = 1.0 if reps == 0 else 0.0\n\n    # 6) eps = randomness\n    eps = random.random() * 0.08\n\n    # 7) Final\n    return 0.4*recency + 0.35*D + 0.10*S + 0.05*N + 0.05*L + eps\n\ndocs = []\nfor item in _input.all():\n  item.json.myNewField = 1\n  item.json.priority = priority(item.json)\n  docs.append(item.json)\n\n  if not docs:\n    return []\n\nbest = max(docs, key=lambda d: d[\"priority\"])\n\nprint(_input.all())\nreturn best"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -192,
        144
      ],
      "id": "f5116d24-cbc3-4871-a924-4d2c0b416d49",
      "name": "Priority formula"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"user_id\": \"{{ $('Priority formula').item.json.user_id }}\",\n  \"value\": \"{{ $('Priority formula').item.json.value }}\",\n  \"last_sent_at\": \"{{ new Date(Date.now()).toISOString() }}\",\n \"last_push_at\": \"{{ new Date(Date.now()).toISOString() }}\", \n\"has_pending\": {{ true }},\n\"pending_message_id\": \"{{ $json.result.message_id }}\"\n}\n",
        "includeOtherFields": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        576,
        128
      ],
      "id": "39256e26-2d36-4c39-89a6-83f83695e3b3",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "operation": "findOneAndUpdate",
        "collection": "users",
        "updateKey": "user_id",
        "fields": "user_id, last_push_at, has_pending",
        "upsert": true,
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        832,
        48
      ],
      "id": "7502d0ec-5acc-445b-9283-744c886b28c8",
      "name": "Find and update user data document",
      "credentials": {
        "mongoDb": {
          "id": "AHx6Vu0j6A0sxyHq",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "operation": "findOneAndUpdate",
        "collection": "expression",
        "updateKey": "value",
        "fields": "value, last_sent_at, pending_message_id",
        "upsert": true,
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        832,
        240
      ],
      "id": "6734e3f9-5a48-4f6f-bfa5-f97bbefe0d58",
      "name": "Find and update the word document",
      "credentials": {
        "mongoDb": {
          "id": "AHx6Vu0j6A0sxyHq",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Priority formula').item.json.user_id }}",
        "text": "=Your picked expression: \"{{ $('Priority formula').item.json.value }}\"\n-----------\n<tg-spoiler>{{ $json.output }}</tg-spoiler>",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "=0 - I had no idea",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-0"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "1",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-1"
                    }
                  },
                  {
                    "text": "2",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-2"
                    }
                  },
                  {
                    "text": "3",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-3"
                    }
                  },
                  {
                    "text": "4",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-4"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "5 - Known like family",
                    "additionalFields": {
                      "callback_data": "=grade-{{ $('Priority formula').item.json._id }}-5"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        368,
        160
      ],
      "id": "1ae5c50c-df50-4dde-b7f6-530023f755f5",
      "name": "Send 'Your picked expression'",
      "webhookId": "d864b269-f9f4-4844-893e-884775ddfffa",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "credentials": {
        "telegramApi": {
          "id": "teZVYgdRAt1b6SeA",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.user_id }}",
        "text": "user updated âœ…",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1056,
        48
      ],
      "id": "5f905337-c701-4464-9edc-c34613255e78",
      "name": "Send a text message2",
      "webhookId": "b9019deb-7245-46f5-bc94-305db99bf400",
      "credentials": {
        "telegramApi": {
          "id": "teZVYgdRAt1b6SeA",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields3').item.json.user_id }}",
        "text": "=doc updated âœ… {{ $json.value }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1056,
        240
      ],
      "id": "e9d33bed-1600-421c-a70a-5a17316aeb84",
      "name": "Send a text message3",
      "webhookId": "b9019deb-7245-46f5-bc94-305db99bf400",
      "credentials": {
        "telegramApi": {
          "id": "teZVYgdRAt1b6SeA",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a terse Italian vocab helper for Telegram.\n\nGiven this Italian word or expression: {{ $json.value }}\n\nReturn EXACTLY four lines, nothing else:\n\nðŸ‡®ðŸ‡¹ Def: [one to two sentence Italian definition at A2/B1, â‰¤20 words] [representative emojis if any]\nðŸ‡¬ðŸ‡§ EN: [1â€“2 common English translations]\nðŸ‡®ðŸ‡· FA: [1â€“2 common Persian (Farsi) translations]\nðŸ§© Esempio: \"[everyday Italian sentence using the word]\"\n\nRules: Pick the most frequent general sense. No IPA, no extra lines. Do not translate the example sentence. If unknown/unclear, reply \"Non trovo la parola.\"\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        32,
        144
      ],
      "id": "b5dc1500-9619-4253-9c83-6514a1d3f93b",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        112,
        368
      ],
      "id": "c51ccf15-883b-4f70-bb0f-5393e398d35e",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Q50URkwBWyzgTn0k",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Find users - no pending, push more than 20 min ago",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find users - no pending, push more than 20 min ago": {
      "main": [
        [
          {
            "node": "Find documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find documents": {
      "main": [
        [
          {
            "node": "Priority formula",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Priority formula": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Find and update user data document",
            "type": "main",
            "index": 0
          },
          {
            "node": "Find and update the word document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find and update user data document": {
      "main": [
        [
          {
            "node": "Send a text message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find and update the word document": {
      "main": [
        [
          {
            "node": "Send a text message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send 'Your picked expression'": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send 'Your picked expression'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e2839c3de7d0fee0161b153399a4168159092a93f8302581c0e1c13ab92eacde"
  }
}